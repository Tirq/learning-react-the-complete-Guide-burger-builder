{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BurgerBuildControls/BurgerBuildControl/BurgerBuildControl.module.css","components/Burger/BurgerBuildControls/BurgerBuildControls.module.css","components/UI/Button/Button.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","hoc/Aux.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BurgerBuildControls/BurgerBuildControl/BurgerBuildControl.js","components/Burger/BurgerBuildControls/BurgerBuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","layout","Aux","className","style","Content","burgerIngredient","type","styles","Seeds1","Seeds2","burger","burgerIngredients","ingredients","length","map","ing","index","BurgerIngredient","name","key","Burger","burgerBuildControl","label","add","remove","disabled","BuildControl","Label","Less","onClick","More","ingredientTypes","price","burgerBuildControls","names","totalPrice","controls","BurgerBuildControl","addIngredient","removeIngredient","includes","orderButton","OrderButton","orderBurger","BuildControls","backdrop","show","Backdrop","onClose","modal","Modal","transform","opacity","button","clicked","fullStyle","Button","join","orderSummary","cancel","proceed","title","groupByName","forEach","i","value","Object","keys","BurgerBuilder","state","purchasing","clonedIngredients","slice","calculateTotalPrice","reduce","a","b","removeIngredientHandler","indexOf","splice","setState","addIngredientHandler","push","startOrderBurgerHandler","cancelOrderBurgerHandler","proceedOrderBurgerHandler","alert","toFixed","this","OrderSummary","BurgerBuildControls","Component","App","Layout","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0b24315.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BurgerBuildControl_BuildControl__tC82o\",\"Label\":\"BurgerBuildControl_Label__1jaIx\",\"Less\":\"BurgerBuildControl_Less__1lRYs\",\"More\":\"BurgerBuildControl_More__3uSc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BurgerBuildControls_BuildControls__1M3C_\",\"OrderButton\":\"BurgerBuildControls_OrderButton__3pa0h\",\"enable\":\"BurgerBuildControls_enable__1j7FN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Ok\":\"Button_Ok__2wIcT\",\"Cancel\":\"Button_Cancel__3kq9-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2WLOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","const aux = (props) => props.children; \nexport default aux;","import React from 'react';\nimport Aux from '../../hoc/Aux';\nimport style from './Layout.module.css';\n\nconst layout = (props) => (\n    <Aux>\n        <div>Will be replaced with Toolbar, SideDrawer and BackDrop</div>\n        <main className={style.Content}>\n            {props.children}\n        </main>        \n    </Aux>\n);\n\nexport default layout;","import React from 'react';\nimport styles from './BurgerIngredient.module.css';\nimport PropTypes from 'prop-types';\n\nconst burgerIngredient = (props) => {\n    const [type]  = [props.type];\n    const ingredient = type === 'BreadTop'\n    ?\n        <div className={styles[type]}>\n            <div className={styles.Seeds1}></div>\n            <div className={styles.Seeds2}></div>\n        </div>\n    :\n        <div className={styles[type]}></div>;\n    return (\n        ingredient\n    )\n\n};\n\nburgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n  };\n\nexport default burgerIngredient; \n","import React from 'react';\nimport styles from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    const [ingredients] = [props.ingredients];\n\n    const burgerIngredients = (ingredients.length === 0) ?\n        <p>Please start adding ingredients!</p> :\n        props.ingredients.map((ing, index) => (\n            <BurgerIngredient type={ing.name} key={ing.name+'_'+index}/>\n        ));\n\n    return (\n        <div className={styles.Burger}>\n           <BurgerIngredient type=\"BreadTop\"/>\n           {burgerIngredients}\n           <BurgerIngredient type=\"BreadBottom\"/>\n        </div>        \n    );\n};\n\nexport default burger;","import React from 'react';\nimport styles from './BurgerBuildControl.module.css';\n\nconst burgerBuildControl = (props) => {\n    const [label, add, remove, disabled] = [props.label, props.add, props.remove, props.disabled];\n\n    return (\n        <div className={styles.BuildControl}>\n            <div className={styles.Label}> {label} </div>\n            <button\n                className={styles.Less}\n                onClick={remove}\n                disabled={disabled}>Less</button>\n            <button className={styles.More} onClick={add}>More</button>\n        </div>\n    );\n\n}\n\nexport default burgerBuildControl;","import React from 'react';\nimport styles from './BurgerBuildControls.module.css';\nimport BurgerBuildControl from './BurgerBuildControl/BurgerBuildControl';\n\nconst ingredientTypes =  [{ name: 'Cheese', price:3.3 },\n                          { name: 'Meat', price:4.4 },\n                          { name: 'Salad', price:1.1 },\n                          { name: 'Bacon', price:2.2 }];\n\nconst burgerBuildControls = (props) => {\n\n    const [names] = [props.names];\n\n    const totalPrice = <p>\n        Total price: <strong>{props.totalPrice}</strong>\n    </p>;\n\n    const controls = ingredientTypes.map( (ing,index) => (\n        <BurgerBuildControl\n            key={ing.name + '-' + index}\n            label={ing.name}\n            add={() => props.addIngredient(ing)}\n            remove={() => props.removeIngredient(ing)}\n            disabled={!names.includes(ing.name)} />\n    ));\n\nconst orderButton = <button\n                        className={styles.OrderButton}\n                        onClick={props.orderBurger}\n                        disabled={!names.length}>Order now!</button>;\n\n    return (\n        <div className={styles.BuildControls}>\n            {totalPrice}\n            {controls}\n            {orderButton}\n        </div>\n    );\n\n}\n\nexport default burgerBuildControls;","import React from 'react';\nimport styles from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={styles.Backdrop} onClick={props.onClose}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\nimport styles from './Modal.module.css';\nimport Backdrop from '../Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux';\n\nconst modal = (props) => {\n    const [children, show, onClose] = [props.children, props.show, props.onClose];\n    return (\n        <Aux>\n            <Backdrop show={show} onClose={onClose}></Backdrop>\n            <div className={styles.Modal}\n                style={{\n                    transform: show ? 'translateY(0)' : 'translateY(-100vh)',\n                    opacity: show ? '1' : '0'\n                }}>\n                {children}\n            </div>\n        </Aux>\n    );\n}\n\nexport default modal;","import React from 'react';\nimport styles from './Button.module.css'\n\nconst button = (props) => {\nconst [clicked, type, name] = [props.clicked, props.type, props.name];\nconst fullStyle = [styles.Button, styles[type]].join(' ');\n\n    return (\n        <button onClick={clicked} className={fullStyle}>{name}</button>\n    );\n    \n};\n\nexport default button;","import React from 'react';\nimport Aux from '../../../hoc/Aux';\nimport Button from './../../UI/Button/Button';\n\nconst orderSummary = (props) => {\n    const[names, totalPrice, cancel, proceed] =\n    [props.names, props.totalPrice, props.cancel, props.proceed];\n\n    const title = <h3>Order summary</h3>;\n    const groupByName = [];\n\n    names.forEach(i => {\n             const value = groupByName[i];\n             typeof value === 'undefined' ?\n               groupByName[i] = 1\n             : groupByName[i] = value + 1\n            });\n\n    const ingredients = Object.keys(groupByName)\n    .map( key => <li key={key}>{key}({groupByName[key]})</li>);\n\n    return(\n        <Aux>\n            {title}\n            <ul>{ingredients}</ul>\n            <p>Total price: <strong>{totalPrice}</strong></p>\n            <p>Continue to checkout?</p>\n            <Button clicked={cancel} type=\"Cancel\" name='CANCEL'/>\n            <Button clicked={proceed} type='Ok' name='CONTINUE'/>\n        </Aux>\n    );\n}\n\nexport default orderSummary;","import React, {Component} from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerBuildControls from '../../components/Burger/BurgerBuildControls/BurgerBuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: [],\n        totalPrice: 5.5,\n        purchasing: false\n    }\n\n    clonedIngredients = () => this.state.ingredients.slice();\n\n    calculateTotalPrice = (ingredients) => ingredients.map(ing => ing.price)\n                                             .reduce((a,b) => a+b, 5.5);\n\n    removeIngredientHandler = (ing) => {\n        const ingredients = this.clonedIngredients();\n        const index = ingredients.indexOf(ing);\n        if(index > -1){\n            ingredients.splice(index,1);\n        }\n        const totalPrice = this.calculateTotalPrice(ingredients);\n        this.setState({ingredients, totalPrice});\n    }\n\n    addIngredientHandler = (ing) => {\n        const ingredients = this.clonedIngredients();\n        ingredients.push(ing);\n        const totalPrice = this.calculateTotalPrice(ingredients);\n        this.setState({ingredients, totalPrice});\n    }\n\n    startOrderBurgerHandler = () => {\n        this.setState({purchasing: true});\n    }\n\n    cancelOrderBurgerHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    proceedOrderBurgerHandler = () => {\n        alert('Your burger is on the way! Happy meal ;)');\n    }\n\n    render () {\n\n        const names = () => this.state.ingredients.map(ing => ing.name);\n\n        const totalPrice = () => this.state.totalPrice.toFixed(2);\n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing}\n                        onClose={this.cancelOrderBurgerHandler}>\n                    <OrderSummary\n                        names={names()}\n                        totalPrice={totalPrice()}\n                        cancel={this.cancelOrderBurgerHandler}\n                        proceed={this.proceedOrderBurgerHandler} />\n                </Modal>\n                <Burger ingredients={this.state.ingredients} />\n                <BurgerBuildControls\n                    names={names()}\n                    removeIngredient={this.removeIngredientHandler}\n                    addIngredient={this.addIngredientHandler}\n                    totalPrice={totalPrice()}\n                    orderBurger={this.startOrderBurgerHandler}/>\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;","import React, {Component} from 'react';\nimport './App.css';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout>\n          <BurgerBuilder/>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}